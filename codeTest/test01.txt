/* eslint-disable no-unused-vars */


const CustomerComponent = () => {
  const handleOrder = () => {
    // Send order command to the server
    fetch('http://localhost:3001/api/order', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ order: 'Order data' }),
    })
      .then(response => response.json())
      .then(data => {
        // Handle response from the server after accepting the order
        alert('Order placed successfully');
      })
      .catch(error => {
        console.error('Error sending order:', error);
        alert('Error placing order');
      });
  };

  return (
    <div>
      <button onClick={handleOrder}>Place Order</button>
    </div>
  );
};

export default CustomerComponent;
//--------------------------------------------------------
import  { useState, useEffect } from 'react';

const DriverComponent = () => {
  const [orders, setOrders] = useState([]);

  useEffect(() => {
    // โหลดรายการคำสั่งที่ถูกส่งมาจาก server
    fetch('http://localhost:3001/api/orders')
      .then(response => response.json())
      .then(data => {
        setOrders(data.orders);
        
      })
      .catch(error => {
        console.error('เกิดข้อผิดพลาดในการโหลดคำสั่ง:', error);
      });
  }, []);

  return (
    <div>
      <h2>รายการคำสั่ง</h2>
      <ul>
        {orders.map((order, index) => (
          <li key={index}>{order}</li>
        ))}
      </ul>
    </div>
  );
};

export default DriverComponent;
//------------------------------------------
const express = require('express');
const bodyParser = require('body-parser');

const app = express();
const PORT = 3001;

app.use(bodyParser.json());

// Enable CORS
app.use((req, res, next) => {
    res.setHeader("Access-Control-Allow-Origin", "http://localhost:5173"); // Change URL to your React website domain
    res.setHeader(
      "Access-Control-Allow-Methods",
      "GET, POST, OPTIONS, PUT, PATCH, DELETE"
    );
    res.setHeader("Access-Control-Allow-Headers", "Content-Type, Authorization");
    res.setHeader("Access-Control-Allow-Credentials", true);
    next();
});

let orders = [];

// รับคำสั่งจากลูกค้า
app.post('/api/order', (req, res) => {
  const order = req.body.order;
  orders.push(order);
  console.log('รับคำสั่ง:', order);
  res.json({ message: 'รับคำสั่งเรียบร้อยแล้ว' });
});

// ส่งรายการคำสั่งให้ driver
app.get('/api/orders', (req, res) => {
  res.json({ orders });
});

app.listen(PORT, () => {
  console.log(`Server is running on port ${PORT}`);
});