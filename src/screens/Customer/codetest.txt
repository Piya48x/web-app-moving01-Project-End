import { useState, useEffect } from "react";
import io from "socket.io-client";
import MapContainer from "./MapContainer ";
import { GoogleMap, LoadScript, Autocomplete } from "@react-google-maps/api";

const socket = io("http://localhost:3000");

const libraries = ["places"];

const CustomerComponent = () => {
  const [pickupLocation, setPickupLocation] = useState("");
  const [destination, setDestination] = useState("");
  const [selectedVehicle, setSelectedVehicle] = useState("");
  const [bookingStatus, setBookingStatus] = useState("");

  const handlePickupSelected = (location) => {
    setPickupLocation(JSON.stringify(location));
  };

  const handleDestinationSelected = (location) => {
    setDestination(JSON.stringify(location));
  };

  const handleOrder = async () => {
    const orderData = {
      pickupLocation,
      destination,
      selectedVehicle,
      bookingStatus,
    };

    try {
      const response = await fetch("http://localhost:3000/api/order", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(orderData),
      });

      if (!response.ok) {
        throw new Error("Network response was not ok");
      }

      const responseData = await response.json();
      console.log(responseData);
      alert("Order placed successfully");
      setPickupLocation("");
      setDestination("");
      setSelectedVehicle("");
      setBookingStatus("");

      // Send 'orderReceived' event to server
      socket.emit("orderReceived");
    } catch (error) {
      console.error("Error placing order:", error);
      alert("Error placing order");
    }
  };

  return (
    <>
      <div className="navbar bg-base-100">
        <div className="flex-1">
          <a className="btn btn-ghost text-xl">daisyUI</a>
        </div>
        <div className="flex-none gap-2">
          <div className="form-control">
            <input
              type="text"
              placeholder="Search"
              className="input input-bordered w-24 md:w-auto"
            />
          </div>
          <div className="dropdown dropdown-end">
            <div
              tabIndex={0}
              role="button"
              className="btn btn-ghost btn-circle avatar"
            >
              <div className="w-10 rounded-full">
                <img
                  alt="Tailwind CSS Navbar component"
                  src="https://daisyui.com/images/stock/photo-1534528741775-53994a69daeb.jpg"
                />
              </div>
            </div>
            <ul
              tabIndex={0}
              className="mt-3 z-[1] p-2 shadow menu menu-sm dropdown-content bg-base-100 rounded-box w-52"
            >
              <li>
                <a className="justify-between">
                  Profile
                  <span className="badge">New</span>
                </a>
              </li>
              <li>
                <a>Settings</a>
              </li>
              <li>
                <a>Logout</a>
              </li>
            </ul>
          </div>
        </div>
      </div>
     <div  style={{ display: 'flex' }}>
     <div className="w-80 flex flex-col items-center justify-center h-screen">
        <h2>Customer Component</h2>
        <select
          value={selectedVehicle}
          onChange={(e) => setSelectedVehicle(e.target.value)}
          className="my-4 p-2 border border-gray-300 rounded-md"
        >
          <option value="">Select Vehicle</option>
          <option value="Car">Car</option>
          <option value="Truck">Truck</option>
          <option value="Motorcycle">Motorcycle</option>
        </select>
        <select
          value={bookingStatus}
          onChange={(e) => setBookingStatus(e.target.value)}
          className="my-4 p-2 border border-gray-300 rounded-md"
        >
          <option value="">Select Booking Status</option>
          <option value="Urgent">Urgent</option>
          <option value="Advance Booking">Advance Booking</option>
          <option value="Full Day Charter">Full Day Charter</option>
        </select>
        <LoadScript googleMapsApiKey="AIzaSyAp5OleyH2H46AGS4kFoPvVu2SDZqCz5nc" libraries={libraries}>
          <Autocomplete
            onLoad={(autocomplete) => console.log(autocomplete)}
            onPlaceChanged={() => console.log('onPlaceChanged')}
            options={{ types: ['geocode'] }}
          >
            <input
              type="text"
              placeholder="Pickup Location"
              value={pickupLocation}
              onChange={(e) => setPickupLocation(e.target.value)}
              className="my-4 p-2 border border-gray-300 rounded-md"
            />
          </Autocomplete>
        </LoadScript>
        <LoadScript googleMapsApiKey="AIzaSyAp5OleyH2H46AGS4kFoPvVu2SDZqCz5nc" libraries={libraries}>
          <Autocomplete
            onLoad={(autocomplete) => console.log(autocomplete)}
            onPlaceChanged={() => console.log('onPlaceChanged')}
            options={{ types: ['geocode'] }}
          >
            <input
              type="text"
              placeholder="Destination"
              value={destination}
              onChange={(e) => setDestination(e.target.value)}
              className="my-4 p-2 border border-gray-300 rounded-md"
            />
          </Autocomplete>
        </LoadScript>
        <button onClick={handleOrder} className="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">
          Place Order
        </button>
      </div>
      <MapContainer
    selectingPickup={!pickupLocation}
    onPickupSelected={handlePickupSelected}
    onDestinationSelected={handleDestinationSelected}
    style={{ width: '100%', height: '400px', border: '1px solid black' }}
  />
     </div>
    </>
  );
};



export default CustomerComponent;
 //----------------
 /* eslint-disable no-unused-vars */
// CustomerComponent.jsx
import { useState, useEffect } from "react";
import io from "socket.io-client";
import MapContainer from "./MapContainer ";
import { LoadScript, Autocomplete } from "@react-google-maps/api";

const socket = io("http://localhost:3000");
const googleMapsApiKey = "AIzaSyAp5OleyH2H46AGS4kFoPvVu2SDZqCz5nc";

const libraries = ["places"];

const CustomerComponent = () => {
  const [pickupLocation, setPickupLocation] = useState("");
  const [destination, setDestination] = useState("");
  const [selectedVehicle, setSelectedVehicle] = useState("");
  const [bookingStatus, setBookingStatus] = useState("");

  const handlePickupSelected = (location) => {
    setPickupLocation(JSON.stringify(location));
     // รับค่า lat และ lng แล้วอัปเดตใน input ที่ใช้สำหรับ pickup location
  setPickupLocation(`${location.lat},${location.lng}`);
  };

  const handleDestinationSelected = (locdation) => {
    setDestination(JSON.stringify(location));
     // รับค่า lat และ lng แล้วอัปเดตใน input ที่ใช้สำหรับ destination
  setDestination(`${location.lat},${location.lng}`);
  };

  const handleOrder = async () => {
    const orderData = {
      pickupLocation,
      destination,
      selectedVehicle,
      bookingStatus,
    };

    try {
      const response = await fetch("http://localhost:3000/api/order", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(orderData),
      });

      if (!response.ok) {
        throw new Error("Network response was not ok");
      }

      const responseData = await response.json();
      console.log(responseData);
      alert("Order placed successfully");
      setPickupLocation("");
      setDestination("");
      setSelectedVehicle("");
      setBookingStatus("");

      // Send 'orderReceived' event to server
      socket.emit("orderReceived");
    } catch (error) {
      console.error("Error placing order:", error);
      alert("Error placing order");
    }
  };

  return (
    <>
      <div className="navbar bg-base-100">
        <div className="flex-1">
          <a className="btn btn-ghost text-xl">daisyUI</a>
        </div>
        <div className="flex-none gap-2">
          <div className="form-control">
            <input
              type="text"
              placeholder="Search"
              className="input input-bordered w-24 md:w-auto"
            />
          </div>
          <div className="dropdown dropdown-end">
            <div
              tabIndex={0}
              role="button"
              className="btn btn-ghost btn-circle avatar"
            >
              <div className="w-10 rounded-full">
                <img
                  alt="Tailwind CSS Navbar component"
                  src="https://daisyui.com/images/stock/photo-1534528741775-53994a69daeb.jpg"
                />
              </div>
            </div>
            <ul
              tabIndex={0}
              className="mt-3 z-[1] p-2 shadow menu menu-sm dropdown-content bg-base-100 rounded-box w-52"
            >
              <li>
                <a className="justify-between">
                  Profile
                  <span className="badge">New</span>
                </a>
              </li>
              <li>
                <a>Settings</a>
              </li>
              <li>
                <a>Logout</a>
              </li>
            </ul>
          </div>
        </div>
      </div>
      <div style={{ display: "flex" }}>
        <div className="w-80 flex flex-col items-center justify-center h-screen">
          <h2>Customer Component</h2>
          <select
            value={selectedVehicle}
            onChange={(e) => setSelectedVehicle(e.target.value)}
            className="my-4 p-2 border border-gray-300 rounded-md"
          >
            <option value="">Select Vehicle</option>
            <option value="Car">Car</option>
            <option value="Truck">Truck</option>
            <option value="Motorcycle">Motorcycle</option>
          </select>
          <select
            value={bookingStatus}
            onChange={(e) => setBookingStatus(e.target.value)}
            className="my-4 p-2 border border-gray-300 rounded-md"
          >
            <option value="">Select Booking Status</option>
            <option value="Urgent">Urgent</option>
            <option value="Advance Booking">Advance Booking</option>
            <option value="Full Day Charter">Full Day Charter</option>
          </select>
          <LoadScript googleMapsApiKey={googleMapsApiKey} libraries={libraries}>
            <Autocomplete
              onLoad={(autocomplete) => console.log(autocomplete)}
              onPlaceChanged={() => console.log("onPlaceChanged")}
              options={{ types: ["geocode"] }}
            >
              <input
                type="text"
                placeholder="Pickup Location"
                value={pickupLocation}
                onChange={(e) => setPickupLocation(e.target.value)}
                className="my-4 p-2 border border-gray-300 rounded-md"
              />
            </Autocomplete>
          </LoadScript>
          <LoadScript googleMapsApiKey={googleMapsApiKey} libraries={libraries}>
            <Autocomplete
              onLoad={(autocomplete) => console.log(autocomplete)}
              onPlaceChanged={() => console.log("onPlaceChanged")}
              options={{ types: ["geocode"] }}
            >
              <input
                type="text"
                placeholder="Destination"
                value={destination}
                onChange={(e) => setDestination(e.target.value)}
                className="my-4 p-2 border border-gray-300 rounded-md"
              />
            </Autocomplete>
          </LoadScript>
          <button
            onClick={handleOrder}
            className="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded"
          >
            Place Order
          </button>
        </div>
        <MapContainer
          selectingPickup={!pickupLocation}
          onPickupSelected={handlePickupSelected}
          onDestinationSelected={handleDestinationSelected}
          style={{ width: "100%", height: "400px", border: "1px solid black" }}
        />
      </div>
    </>
  );
};

export default CustomerComponent;
